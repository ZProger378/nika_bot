import json

import config
import fuzz_methods
from config import bot
from random import randint
from database import User, TTToe
from TicTacToe.markups import main_markup as tttoe_markup
from fuzz_methods import is_message_to_bot


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    message = call.message
    data = call.data
    if data.startswith("tictactoe_"):  # –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –ø–æ–ª–µ –∏–≥—Ä—ã
        # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –∏–≥—Ä—ã –∏ –Ω–∞–∂–∞—Ç–æ–≥–æ –ø–æ–ª—è
        game_id = int(data.split("_")[1])
        btn_id = int(data.split("_")[-1])
        game = TTToe(game_id)  # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–± –∏–≥—Ä–µ
        if not int(game.map[btn_id - 1]):
            # –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ —Ö–æ–¥–∏—Ç —Å–≤–æ–µ–π –æ—á–µ—Ä–µ–¥—å—é
            if (game.player_one == call.from_user.id and game.step == 1) or (
                    game.player_two == call.from_user.id and game.step == 2) and game.winner == 0:
                _map = game.map
                new_map = ""
                # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—á–µ—Ä–µ–¥–∏
                if game.step == 1:
                    new_step = 2
                else:
                    new_step = 1
                # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
                for i, char in enumerate(_map):
                    if i == btn_id - 1:
                        if char == "0":
                            if game.player_one == call.from_user.id:
                                new_map += "1"
                            elif game.player_two == call.from_user.id:
                                new_map += "2"
                        else:
                            new_map += char
                    else:
                        new_map += char

                # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                game.edit_map(new_map)
                game.edit_step(new_step)

                # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –∑–∞–Ω—è—Ç—ã—Ö –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –∏–≥—Ä–æ–∫–æ–º
                player_one_pos = []
                player_two_pos = []
                for btn_id, i in enumerate(game.map):
                    if i == "1":
                        player_one_pos.append(btn_id + 1)
                    elif i == "2":
                        player_two_pos.append(btn_id + 1)

                # –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–∑–∏—Ü–∏—è –¥–ª—è –≤—ã–π–≥—Ä—ã—à–∞
                winner_positions = [
                    [1, 4, 7], [2, 5, 8],
                    [3, 6, 9], [1, 2, 3],
                    [4, 5, 6], [7, 8, 9],
                    [1, 5, 9], [3, 5, 7]
                ]

                winner = 0
                for pos in winner_positions:  # –ü–µ—Ä–µ–±–æ—Ä –≤—ã–π–≥—Ä—ã—à–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏—Ö –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ
                    if pos[0] in player_one_pos and pos[1] in player_one_pos and pos[2] in player_one_pos:
                        winner = 1  # –ü–æ–±–µ–∂–¥–∞–µ—Ç 1 –∏–≥—Ä–æ–∫
                        break
                    elif pos[0] in player_two_pos and pos[1] in player_two_pos and pos[2] in player_two_pos:
                        winner = 2  # –ü–æ–±–µ–∂–¥–∞–µ—Ç 2 –∏–≥—Ä–æ–∫
                        break

                if winner == 0:  # –ï—Å–ª–∏ –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–±–µ–¥–∏–ª = –∏–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–Ω–∞–µ—Ç—Å—è
                    user = User([game.player_one, game.player_two][new_step - 1])
                    bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id,
                                          text=f"–•–æ–¥ @{user.username}",
                                          reply_markup=tttoe_markup(game.id))
                else:  # –ò–Ω–∞—á–µ = –∫–æ–Ω–µ—Ü –∏–≥—Ä—ã
                    game.edit_winner(winner)
                    user = User([game.player_one, game.player_two][winner - 1])
                    bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id,
                                          text=f"@{user.username} - –ø–æ–±–µ–¥–∏–ª!",
                                          reply_markup=tttoe_markup(game.id))
            elif game.winner != 0:  # –ï—Å–ª–∏ –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞ = —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_handler(message):
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}")


@bot.message_handler(chat_types=["group", "supergroup"])
def main_handler(message):
    text = message.text.lower()  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç –≤ lowercase
    user = User(message.from_user.id)  # –ü–æ–ª—É—á–∞—é –æ–±—ä–µ–∫—Ç "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    if not user.is_exist():  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        user.create(username=message.from_user.username.lower())  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

    if message.reply_to_message and message.reply_to_message.from_user.id not in [message.from_user.id,
                                                                                  bot.get_me().id]:
        answers = fuzz_methods.get_reply_text(text)
        if "!rep" in answers or text.startswith("+"):  # –ï—Å–ª–∏ –≤—ã—è–≤–ª–µ–Ω–æ –ø–æ–≤—ã—à–µ–Ω–∏–µ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ —á–ª–µ–Ω—É –≥—Ä—É–ø–ø—ã
            user_id = message.reply_to_message.from_user.id  # –ü–æ–ª—É—á–µ–Ω–∏–µ ID —á–ª–µ–Ω–∞ –≥—Ä—É–ø–ø—ã
            username = bot.get_chat_member(chat_id=message.chat.id, user_id=user_id).user.username  # –ü–æ–ª—É—á–µ–Ω–∏–µ username
            user = User(user_id)
            if not user.is_exist():
                user.create(username)
            user.addrep()  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
            bot.reply_to(message, f"–£–≤–∞–∂–µ–Ω–∏–µ –æ–∫–∞–∑–∞–Ω–æ @{username} (+1 –∫ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏)")
        elif "!new_alias" in answers:
            user_id = message.reply_to_message.from_user.id  # –ü–æ–ª—É—á–µ–Ω–∏–µ ID —á–ª–µ–Ω–∞ –≥—Ä—É–ø–ø—ã
            username = bot.get_chat_member(chat_id=message.chat.id, user_id=user_id).user.username  # –ü–æ–ª—É—á–µ–Ω–∏–µ username
            user = User(user_id)
            alias = ""
            alias_start = text.find('"')
            alias_end = text.find('"', alias_start + 1)
            if alias_start != -1:
                for i in range(alias_start + 1, alias_end):
                    alias += text[i]
                user.new_alias(alias)
                bot.reply_to(message, f"<b>–ù–æ–≤–∞—è –∫–ª–∏—á–∫–∞</b> \"<i>{alias}</i>\" –¥–ª—è @{username}")
            else:
                bot.reply_to(message, f"–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –¥–∞—Ç—å –∫–ª–∏—á–∫—É —á–µ–ª–æ–≤–µ–∫—É, "
                                      f"—Ç—ã –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ "
                                      f"\"–ö–ª–∏—á–∫–∞\" –∏ –≤ –∫–æ–≤—ã—á–∫–∞—Ö —É–∫–∞–∑–∞—Ç—å –∫–ª–∏—á–∫—É\n\n"
                                      f"<code><i>–ö–ª–∏—á–∫–∞ \"–Ω–æ–≤–∞—è –∫–ª–∏—á–∫–∞\"</i></code>")

    # –ï—Å–ª–∏ –æ–±—Ä–∞—â–∞—é—Ç—Å—è –∫ –±–æ—Ç—É
    if is_message_to_bot(text) or message.reply_to_message and message.reply_to_message.from_user.id == bot.get_me().id:
        if is_message_to_bot(text):
            text_list = text.split(" ")
            text_list[0] = ""
            text = " ".join(text_list)
        answers = fuzz_methods.get_reply_text(text)  # –ü–æ–ª—É—á–∞—é –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        for i, answer in enumerate(answers):
            if not answer.startswith("!"):  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ - –Ω–µ –∫–æ–º–∞–Ω–¥–∞
                if not i:
                    if i in ["–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –Ω–∞ —ç—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å(", "–Ø –Ω–µ —Å–æ–≤—Å–µ–º —Ç–µ–±—è –ø–æ–Ω–∏–º–∞—é",
                             "–Ø –Ω–µ –ø–æ–Ω—è–ª–∞, —á—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–∫–∞–∑–∞—Ç—å \uD83D\uDE44", "?"]:
                        pass
                    bot.reply_to(message, answer)
                else:
                    bot.send_message(message.chat.id, answer)
            else:
                if answer == "!tictactoe":  # –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –≤ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏
                    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ 2-–≥–æ –∏–≥—Ä–æ–∫–∞
                    username = None
                    for word in text.split(" "):
                        if word.startswith("@"):
                            username = word.split("@")[-1]
                    if username is not None:  # –ï—Å–ª–∏ –∏–º—è 2-–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–∞–π–¥–µ–Ω–æ = –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã
                        user = User(username=username)
                        # –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –∏ –≤—ã–≤–æ–¥ –ø—É—Å—Ç–æ–≥–æ –ø–æ–ª—è
                        game = TTToe(randint(100000, 9999999))
                        game.create(message.from_user.id, user.id)
                        bot.send_message(message.chat.id, f"–•–æ–¥ @{message.from_user.username}",
                                         reply_markup=tttoe_markup(game.id))
                    else:  # –ï—Å–ª–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ
                        bot.reply_to(message, f"–ù–∞–ø–∏—à–∏ –Ω–∏–∫, —Å –∫–µ–º —Ö–æ—á–µ—à—å –∏–≥—Ä–∞—Ç—å (–¢–∏–ø–æ: @Name)")
                    bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
                elif answer == "!userinfo":  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ
                    user = User(message.from_user.id)
                    bot.reply_to(message, f"<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–±–µ</b>\n\n"
                                          f"üë§ USERNAME: @{user.username}\n"
                                          f"ü§ñ ID: <code>{user.id}</code>\n"
                                          f"üòé –†–µ–ø—É—Ç–∞—Ü–∏—è: <b>{user.rep}</b>\n"
                                          f"‚úèÔ∏è –ö–ª–∏—á–∫–∞: <i>{str(user.alias).replace('None', '–ù–µ—Ç')}</>"
                                 .replace("@None", "–ù–µ—Ç"))
                elif answer == "!wikisearch":
                    when = text.find("–∫–æ–≥–¥–∞")
                    whatis = text.find("—á—Ç–æ —Ç–∞–∫–æ–µ")
                    what = text.find("—á—Ç–æ")
                    prompt = ""
                    results = []
                    for question in [when, whatis, what]:
                        if question != -1:
                            for x in range(question, len(text)):
                                prompt += text[x]
                            result = config.search(prompt, 1)
                            results.append(result)
                            if result is not None:
                                bot.reply_to(message, f"–ü–æ –∑–∞–ø—Ä–æ—Å—É \"<i>{prompt}</i>\":\n<b>{result}</b>")
                                break
                            prompt = ""


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –º–µ—Ç–æ–¥–æ–º .polling()
    print("[i] Bot is started...")
    bot.polling(none_stop=True, interval=0)
